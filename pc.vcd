$date
	Fri Apr  8 16:47:05 2022
$end
$version
	ModelSim Version 6.6g
$end
$timescale
	1ns
$end
$scope module PC_TEST_BENCH $end
$var wire 1 ! pc_out [31] $end
$var wire 1 " pc_out [30] $end
$var wire 1 # pc_out [29] $end
$var wire 1 $ pc_out [28] $end
$var wire 1 % pc_out [27] $end
$var wire 1 & pc_out [26] $end
$var wire 1 ' pc_out [25] $end
$var wire 1 ( pc_out [24] $end
$var wire 1 ) pc_out [23] $end
$var wire 1 * pc_out [22] $end
$var wire 1 + pc_out [21] $end
$var wire 1 , pc_out [20] $end
$var wire 1 - pc_out [19] $end
$var wire 1 . pc_out [18] $end
$var wire 1 / pc_out [17] $end
$var wire 1 0 pc_out [16] $end
$var wire 1 1 pc_out [15] $end
$var wire 1 2 pc_out [14] $end
$var wire 1 3 pc_out [13] $end
$var wire 1 4 pc_out [12] $end
$var wire 1 5 pc_out [11] $end
$var wire 1 6 pc_out [10] $end
$var wire 1 7 pc_out [9] $end
$var wire 1 8 pc_out [8] $end
$var wire 1 9 pc_out [7] $end
$var wire 1 : pc_out [6] $end
$var wire 1 ; pc_out [5] $end
$var wire 1 < pc_out [4] $end
$var wire 1 = pc_out [3] $end
$var wire 1 > pc_out [2] $end
$var wire 1 ? pc_out [1] $end
$var wire 1 @ pc_out [0] $end
$var reg 32 A pc_in [31:0] $end
$var reg 1 B pc_ctrl $end
$var reg 1 C clk $end
$scope module PC_TEST $end
$var wire 1 D pc_in [31] $end
$var wire 1 E pc_in [30] $end
$var wire 1 F pc_in [29] $end
$var wire 1 G pc_in [28] $end
$var wire 1 H pc_in [27] $end
$var wire 1 I pc_in [26] $end
$var wire 1 J pc_in [25] $end
$var wire 1 K pc_in [24] $end
$var wire 1 L pc_in [23] $end
$var wire 1 M pc_in [22] $end
$var wire 1 N pc_in [21] $end
$var wire 1 O pc_in [20] $end
$var wire 1 P pc_in [19] $end
$var wire 1 Q pc_in [18] $end
$var wire 1 R pc_in [17] $end
$var wire 1 S pc_in [16] $end
$var wire 1 T pc_in [15] $end
$var wire 1 U pc_in [14] $end
$var wire 1 V pc_in [13] $end
$var wire 1 W pc_in [12] $end
$var wire 1 X pc_in [11] $end
$var wire 1 Y pc_in [10] $end
$var wire 1 Z pc_in [9] $end
$var wire 1 [ pc_in [8] $end
$var wire 1 \ pc_in [7] $end
$var wire 1 ] pc_in [6] $end
$var wire 1 ^ pc_in [5] $end
$var wire 1 _ pc_in [4] $end
$var wire 1 ` pc_in [3] $end
$var wire 1 a pc_in [2] $end
$var wire 1 b pc_in [1] $end
$var wire 1 c pc_in [0] $end
$var wire 1 d pc_ctrl $end
$var wire 1 e clk $end
$var reg 32 f pc_out [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx A
xB
1C
b0 f
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0%
0$
0#
0"
0!
1e
xd
xc
xb
xa
x`
x_
x^
x]
x\
x[
xZ
xY
xX
xW
xV
xU
xT
xS
xR
xQ
xP
xO
xN
xM
xL
xK
xJ
xI
xH
xG
xF
xE
xD
$end
#50
0C
0e
#100
1C
1e
#150
0C
0e
#200
1C
1e
#202
1B
1d
#204
b101 A
1c
0b
1a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
#250
0C
0e
#300
1C
1e
b101 f
1@
1>
#304
0B
0d
#306
b1101 A
1`
#350
0C
0e
#400
1C
1e
#406
xB
xd
#408
b1111 A
1b
#450
0C
0e
#500
1C
1e
#510
b10001 A
0b
0a
0`
1_
#550
0C
0e
#600
1C
1e
#650
0C
0e
#700
1C
1e
#750
0C
0e
#800
1C
1e
#850
0C
0e
#900
1C
1e
#950
0C
0e
#1000
1C
1e
#1050
0C
0e
#1100
1C
1e
#1150
0C
0e
#1200
1C
1e
#1250
0C
0e
#1300
1C
1e
#1350
0C
0e
#1400
1C
1e
#1450
0C
0e
#1500
1C
1e
#1550
0C
0e
#1600
1C
1e
#1650
0C
0e
#1700
1C
1e
#1750
0C
0e
#1800
1C
1e
#1850
0C
0e
#1900
1C
1e
#1950
0C
0e
#2000
1C
1e
#2050
0C
0e
#2100
1C
1e
#2150
0C
0e
#2200
1C
1e
#2250
0C
0e
#2300
1C
1e
#2350
0C
0e
#2400
1C
1e
#2450
0C
0e
#2500
1C
1e
#2550
0C
0e
#2600
1C
1e
#2650
0C
0e
#2700
1C
1e
